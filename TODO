COMANDOS
ALT + C => Cancelar
ALT + D => Finalizar tarea y contador de tiempo
ALT + S => Inicia contador de tiempo
CTRL + ENTER => Crea tarea (checkbox)
Configuración ambiente:
    ✔ GIT INIT @done(23-07-04 17:17)
    ✔ INSTALAR NEXT.JS => npx create-next-app --typescript @done(23-07-04 17:19)
    ✔ Ejecutar sitio con comando => npm run dev @started(23-07-04 17:19) @done(23-07-04 17:20) @lasted(1m16s)
Cleanup sobre app:
    ✔ page.tsx (eliminar main - crear div) @done(23-07-04 19:06)
    ✔ layout.tsx (cambiar title - description) @done(23-07-04 19:06)
        ✔ import { Nunito } from "next/font/google"; @done(23-07-04 19:06)
        ✔ crear const font = Nunito - className (body) @done(23-07-04 19:06)
    ✔ globals.css (clean all) @done(23-07-04 19:06)
    ✔ delete page.module.css @done(23-07-04 19:06)

Configuración ambiente.p2:
    ✔ INSTALAR TAILWIND CSS => npm install -D tailwindcss postcss autoprefixer @done(23-07-04 19:15)
        ✔ ejecutar comando => npx tailwindcss init -p (created Tailwindcss ...  created PostCSS ...) @done(23-07-04 19:15)
    ✔ VALIDAR postcss.config.js - tailwind.config.js - globals.css @done(23-07-04 19:18)
    ✔ CONFIGURE tailwind.config.js (configure template paths) @done(23-07-04 19:20)
        ✔ './app/**/*.{js,ts,jsx,tsx,mdx}', './pages/**/*.{js,ts,jsx,tsx,mdx}', './components/**/*.{js,ts,jsx,tsx,mdx}', @done(23-07-04 19:21)
    ✔ ADD globals.css (add tailwind directives) @done(23-07-04 19:23)
        ✔ @tailwind base; @tailwind components; @tailwind utilities; @done(23-07-04 19:23)
    ✔ EXECUTE npm run dev @done(23-07-04 19:26)
    
Creación Navbar UI app/navbar:
    ✔ ADD className (div) @done(23-07-04 19:29)
        ✔ text-rose-500 text-2xl @done(23-07-04 19:29)
    ✔ CREATE (app/Components) @done(23-07-05 14:56)
        ✔ (Navbar.tsx) /navbar/Navbar realizar import Container @done(23-07-05 14:56)
        ✔ (Container.tsx) /components/Container interface, const, export default @done(23-07-05 14:56)
        ✔ (Logo.tsx) navbar/Logo @done(23-07-05 15:24)
    ✔ CREATE (folder images) /public/images @done(23-07-05 15:39)
        ✔ ADD logo.png @done(23-07-05 15:39)
    ✔ CREATE (Search.tsx) /navbar/Search @done(23-07-05 15:40)
        ✔ INSTALL npm install react-icons @done(23-07-05 15:43)
        ✔ CREATE 3 div (anywhere, ane week, add guest) @done(23-07-05 16:03)
        ✔ import { BiSearch } from 'ract-icons/bi'; @done(23-07-05 16:03)
    ✔ CREATE (UserMenu.tsx) /navbar/UserMenu @done(23-07-05 16:05)
        ✔ CREATE div => div => div user Menu @done(23-07-05 17:14)
        ✔ CREATE icon burger (react-icon) @done(23-07-05 17:19)
    ✔ CREATE (Avatar.tsx) components/Avatar @done(23-07-05 17:21)
        ✔ import Image from "next/image"; @done(23-07-05 17:29)
        ✔ ADD image (placeholder.jpg) @done(23-07-05 17:35)
    ✔ CREATE (MenuItem.tsx) navbar/MenuItem @done(23-07-05 23:59)
        ✔ (MenuItem.tsx) navbar/MenuItem interface, const, export default @done(23-07-06 00:04)
    ✔ ADD-modal (UserMenu.tsx) /navbar/UserMenu  MenuItem, onClick, label (Login, Sign up) @done(23-07-06 00:10)
        ✔ fin navbar @done(23-07-06 00:14)

Creación Auth UI (login model / modelo de registro): 
    ✔ CREATE (ClientOnly.tsx) components/ClienOnly @started(23-07-06 23:53) @done(23-07-07 00:05) @lasted(12m14s)
    ✔ CREATE folder (modals) components/modals @started(23-07-07 00:05) @done(23-07-07 00:07) @lasted(2m2s)
        ✔ CREATE (Modals.tsx) modals/Modals @started(23-07-07 00:07) @done(23-07-07 00:07) @lasted(39s)
        ✔ IMPORT useCallback,useEffect,useState @done(23-07-07 00:54)
        ✔ CREATE interface isOpen, onClose, onSubmit, title, body, footer, actionLabel, disabled, secondaryAction, secondaryLabel @done(23-07-07 00:55)
        ✔ CREATE div x2 {CONTENT div x2}, {HEADER div, button} @done(23-07-07 00:58)
        ✔ IMPORT { button/IoMdClose } from 'react-icons/io'; and onClick={handleClose} /* error "Modal" 1:01:55 Auth UI */ @done(23-07-07 00:58) 
        ✔ CREATE {body, footer} comment @done(23-07-07 01:06)
    ✔ CREATE (Button.tsx) components/Button @done(23-07-07 01:22)
        ✔ ADD (Modal.tsx) <Button> disabled={disabled} label={actionLabel} onClick={handleSubmit} @done(23-07-07 01:27)
    ✔ CREATE folder (hooks) /components/hooks (modelo inicio de sesión) @done(23-07-07 01:34)
    ✔ EXECUTE npm install zustand @done(23-07-07 01:35)
    ✔ REVIEW {/* error "Modal" 1:01:55 Auth UI */} @done(23-07-07 02:21)
    ✔ CREATE (RegisterModal.tsx) /modals/RegisterModal @done(23-07-07 02:59)
        ✔ EXECUTE npm install axios @done(23-07-07 03:02)
        ✔ EXECUTE npm install react-hook-form @done(23-07-07 03:07)
        ✔ ADD const, import useRegisterModal (/navbar/UserMenu) @done(23-07-07 03:45)
    ✔ CREATE (Heading.tsx) /components/Heading @done(23-07-07 03:52)
    ✔ CREATE folder (inputs) /components/inputs @done(23-07-07 03:58)
        ✔ CREATE (Input.tsx) /components/inputs/Input @done(23-07-07 03:59)
☐ ERROR Unhandled Runtime Error: Objects are not valid as a React child (found: object with keys {children}). If you meant to render a collection of children, use an array instead. (npm i next@latest)
    ✔ EXECUTE npm install react-hot-toast @done(23-07-07 04:46)
    ✔ CREATE folder (providers) /app/providers @done(23-07-07 04:48) 
        ✔ EXECUTE npm install zustand @done(23-07-07 05:20)
        ✔ CREATE (ToasterProvider.tsx) /providers/ToasterProvider {1:29:49 =>} @done(23-07-07 05:32)
    ✔ ADD /modals/RegisterModal {footer} @done(23-07-10 16:55)
        ✔ CREATE div x2 account, log in @done(23-07-10 16:56)
        ✔ CREATE Continue with Google, Github @done(23-07-10 16:57)
    ✔ FIN Auth IU @done(23-07-10 16:59)

Register functionality, MongoDB, Prisma setup:
    ✔ EXECUTE npm install prisma @started(23-07-10 17:00) @done(23-07-10 17:01) @lasted(1m53s)
    ✔ EXECUTE npx prisma init @started(23-07-10 17:01) @done(23-07-10 17:02) @lasted(1m49s)
        ✔ INSTALL ext prisma @done(23-07-10 17:26)
    ✔ ADD DATABASE_URL MongoDB @started(23-07-10 17:02) @done(23-07-10 17:21) @lasted(19m28s)
    ✔ CREATE /prisma/schema.prisma model user @started(23-07-10 17:21) @done(23-07-10 17:22) @lasted(1m16s)
    ✔ CREATE /prisma/schema.prisma model Account @started(23-07-10 17:22) @done(23-07-10 17:22) @lasted(49s)
    ✔ CREATE /prisma/schema.prisma model Reservation @started(23-07-10 17:22) @done(23-07-10 17:40) @lasted(18m36s)
        ✔ EXECUTE npx prisma db push --preview-feature @started(23-07-10 17:40) @done(23-07-10 17:46) @lasted(6m44s)
        ✔ INSTALL packages npm install next-auth @prisma/client @next-auth/prisma-adapter @started(23-07-10 17:48) @done(23-07-10 17:48) @lasted(8s)
        ✔ INSTALL npm install bcrypt @started(23-07-10 17:49) @done(23-07-10 17:49) @lasted(12s)
        ✔ INSTALL npm install -D @types/bcrypt @started(23-07-10 17:49) @done(23-07-10 17:49) @lasted(57s)
☐ Error: MongoDB error SCRAM failure: bad auth : authentication failed 0: schema_core::commands::schema_push::Calculate `from` at schema-engine\core\src\commands\schema_push.rs:43 1: schema_core::state::SchemaPush at schema-engine\core\src\state.rs:433
    ✔ CREATE folder (libs) /app/libs @started(23-07-10 17:51) @done(23-07-10 17:52) @lasted(1m)
        ✔ CREATE (prismadb.ts) /libs/prismadb @started(23-07-10 17:52) @done(23-07-10 17:53) @lasted(1m8s)
    ✔ CREATE folders (pages) /pages/api/auth, /pages/api/auth/ @started(23-07-10 17:53) @done(23-07-10 18:01) @lasted(8m34s)
        ✔ CREATE ([...nextauth].ts) /pages/api/auth/[...nextauth] @started(23-07-10 18:01) @done(23-07-10 18:02) @lasted(1m18s)
    ✔ CREATE folder (api) /app/api @started(23-07-10 18:43) @done(23-07-10 18:43) @lasted(8s)
        ✔ CREATE folder (register) @started(23-07-10 18:43) @done(23-07-10 18:43) @lasted(36s)
        ✔ CREATE (route.ts) /app/api/register/route @started(23-07-10 18:43) @done(23-07-10 18:44) @lasted(1m24s)
    ✔ FIN Register functionality, MongoDB, Prisma setup @started(23-07-10 17:00) @done(23-07-10 19:05) @lasted(2h5m40s)

Login functionality:
    ✔ CREATE (useLoginModal.ts) /hooks/useLoginModal @done(23-07-19 01:33)
    ✔ CREATE (LoginModal.ts) /modals/LoginModal @done(23-07-19 01:35)
        ✔ ADD const, import LoginModal (/app/layout.tsx) @done(23-07-19 01:37)
        ✔ ADD useLoginModal to LoginModal.tsx (/modal/LoginModal.tsx) @done(23-07-19 01:40)
        ✔ ADD const, import LoginModal (/navbar/UserMenu) @done(23-07-19 01:44)
        ✔  ADD title 'Login' (LoginModal.tsx)  /modals/LoginModal.tsx @done(23-07-19 01:48)
        ✔ DELETE input (username) (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-19 01:51)
        ✔ DELETE name default value (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-19 01:52)
        ✔ ADD import {signIn} from 'next-auth/client' (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-19 01:54)
        ✔ DELETE axios between onSubmit-bodyContent (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-19 01:58)
        ✔ ADD import router from 'next/navigation' (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-19 02:06)
    ✔ CREATE folder (actions) /app/actions @done(23-07-19 02:14)
        ✔ CREATE (getCurrentUser.ts) /app/actions/getCurrentUser @done(23-07-19 02:15)
        ✔ ADD const, import getCurrentUser (/app/layout.tsx) @done(23-07-19 02:38)
        ✔ ADD interface, const, import /components/navbar/Navbar.tsx @done(23-07-19 02:44)
        ✔ ADD interface, const, import /components/navbar/UserMenu.tsx @done(23-07-19 02:49)
        ✔ CREATE adicional menuItem (UserMenu.tsx) /components/navbar/UserMenu.tsx @done(23-07-19 02:58)
        ✔ ADD logOut function (UserMenu.tsx) /components/navbar/UserMenu.tsx @done(23-07-19 03:00)
    ✔ FIN Login functionality @started(23-07-19 01:33) @done(23-07-19 03:00) @lasted(1h27m56s)

Social Login (Google and Github):  
    ✔ CREATE folder (types) /app/types @done(23-07-19 03:09)
        ✔ CREATE (index.ts) /app/types/index.ts @done(23-07-19 03:10)
        ✔ ADD import, replace User x SafeUser delete user (prisma.client) (Navbar.tsx) /components/navbar/Navbar.tsx @done(23-07-19 03:13)
        ✔ ADD import, replace User x SafeUser delete user (prisma.client) (UserMenu.tsx) /components/navbar/UserMenu.tsx @done(23-07-19 03:14)
    ✔ ADD developer settings in GitHub @done(23-07-19 03:21)
        ✔ COPY Client ID from GitHub @done(23-07-19 03:22)
        ✔ CREATE CLIENT_SECRET_GITHUB @done(23-07-19 03:25)
        ✔ ADD .env file with CLIENT_ID_GITHUB and CLIENT_SECRET_GITHUB @done(23-07-19 03:23)
        ✔ ADD (RegisterModal.tsx) /modals/RegisterModal.tsx signIn, import('github') @done(23-07-19 03:27)
        ✔ ADD (UserMenu.tsx) AiOutlineMenu => avatar (UserMenu.tsx) /components/navbar/UserMenu.tsx @done(23-07-19 03:30)
        ✔ ADD (Avatar.tsx) interface adn source app/components/Avatar.tsx @done(23-07-19 03:35)
    ✔ ADD (next.config.js) "avatar.githubusercontent.com" to images domains @done(23-07-19 03:44)
    ✔ ADD developer settings in Google 'http://localhost:3000/api/auth/callback/google' @done(23-07-19 03:51)
    ✔ ADD GOOGLE_CLIENT_ID and GOOGLE_SECRET to .env @done(23-07-19 03:54)
    ✔ ADD footer.content (RegisterModal.tsx) /modals/RegisterModal.tsx @done(23-07-19 03:55)
    ☐ FIN  Social Login (Google and Github) @started(23-07-19 03:09) @done(23-07-19 03:55) @lasted(46m56s)

Categories UI:
    ✔ CREATE (Categories.tsx) /navbar/Categories.tsx @done(23-07-21 00:04)
        ✔ ADD (Categories /) import, const /navbar/Navbar.tsx @done(23-07-21 00:07)
        ✔ ADD Container - div - class (Categories.tsx) /components/Categories.tsx @done(23-07-21 00:10)
    ✔ CREATE (CategoryBox.tsx) /components/CategoryBox.tsx @done(23-07-21 00:19)
        ✔ ADD interface, const (CategoryBox.tsx) /components/CategoryBox.tsx @done(23-07-21 00:32)
        ✔ ADD import IconType, useRouter (CategoryBox.tsx) /components/CategoryBox.tsx @done(23-07-21 00:54)
    ✔ INSTALL npm install query-string @done(23-07-21 01:17)
        ✔ ADD (CategoryBox.tsx) const router, params, updatedQuery, url @done(23-07-21 01:56)
        ✔ ADD (Categories.tsx) import CategoryBox, useSearchParams, MdOutlineVilla, GiWindmill, TbBeach @done(23-07-21 01:58)
        ✔ ADD (Categories.tsx) const categories @done(23-07-21 02:00)
    ✔ ADD import from react-icons {bs,fa,tb,gi,md,io5} (Categories.tsx) @done(23-07-21 02:18)
        ✔ CHECK 'use client'; /components/navbar @done(23-07-21 02:24)
    ✔ FIN Categories UI @started(23-07-21 00:04) @done(23-07-21 02:26) @lasted(2h22m25s)

Listing creation step 1 (Category selection):
    ✔ const toggle modal (LoginModal.tsx) /modals/LoginModal.tsx @done(23-07-21 02:52)
    ✔ const toggle modal (RegisterModal.tsx) /modals/RegisterModal.tsx @done(23-07-21 02:55)
        ✔ const onRent (UserMenu.tsx) /components/navbar/UserMenu.tsx @done(23-07-21 03:01)
    ✔ CREATE (useRentModal.ts) /hooks/useRentModal @done(23-07-21 03:03)
    ✔ CRATE (RentModal.tsx) /components/modals/RentModal.tsx @done(23-07-21 03:05)
        ✔ ADD (layout.tsx) /app/layout.tsx RentModal /> @done(23-07-21 03:16)
        ✔ ADD (UserMenu.tsx) /components/navbar/UserMenu.tsx const-import useRenModal @done(23-07-21 03:19)
        ✔ ADD (enum step) (RentModal.tsx) /components/modals/RentModal.tsx @done(23-07-21 03:24)
    ✔ CREATE STEPS (RentModal.tsx) bodyContent /components/modals/RentModal @done(23-07-21 03:40)
    ✔ CREATE (CategoryInput.tsx) /components/inputs/CategoryInput.tsx @done(23-07-21 03:43)
        ✔ ADD 'use client', import, interface, const, div, class @done(23-07-21 03:52)
    ✔ FIN Listing creation step 1 (Category selection) @started(23-07-21 02:52) @done(23-07-21 04:07) @lasted(1h15m50s)

☐ `next.config.js` Loading Error SyntaxError: (":") Unexpected token solved with npm i next@latest (23-07-22 01:25)
☐ 'latlng' unknown word solved Error (23-07-22 02:03)

Listing creation step 2 (Location selection, Map component, Country autocomplete):
    ✔ REPLACE const => let {bodycontent} @done(23-07-22 03:05)
    ✔ REPLACE (onSubmit) Modal BodyContent (RentModal.tsx) /components/modals/RentModal.tsx @done(23-07-22 03:05)
    ✔ CREATE (CountrySelect.tsx) /components/inputs/CountrySelect.tsx @done(23-07-22 03:10)
        ✔ ADD (CountrySelect.tsx) const, import, interface, const, div, class @done(23-07-22 03:12)
    ✔ CREATE (useCountries.ts) /app/hooks/useCountries @done(23-07-22 03:14)
        ✔ const, import, export @done(23-07-22 03:22)
    ✔ INSTALL npm install world-countries @done(23-07-22 03:14)
    ✔ INSTALL npm install react-select @done(23-07-22 03:24)
    ✔ ADD CountrySelectProps, CountryOption, CountrySelect, useCountries, useCountrySelec (CountrySelect.tsx) /components/inputs/CountrySelect.tsx @done(23-07-22 03:47)
    ✔ CREATE (Map.tsx) /components/Map.tsx @done(23-07-22 03:51)
        ✔ INSTALL npm install leaflet @done(23-07-22 03:53)
        ✔ INSTALL npm install -D @types/leaflet @done(23-07-22 03:55)
        ✔ INSTALL npm install react-leaflet @done(23-07-22 03:55)
    ✔ ADD (global.css) .leaflet-(buttom, control, pane, top) @done(23-07-22 04:10)

☐ No se encuentra el nombre 'watch' (RentModal.tsx) /components/modals/RentModal.tsx
☐ Error: Objects are not valid as a React child (found: object with keys {children}). If you meant to render a collection of children, use an array instead.
        
        ✔ ADD (Map.ts) //components/Map.tsx  interface, import, const, div, class @started(23-07-22 04:10) @done(23-07-22 04:35) @lasted(25m17s)
    ✔ Listing creation step 2 (Location selection, Map component, Country autocomplete) @started(23-07-22 03:05) @done(23-07-22 04:49) @lasted(1h44m34s)

